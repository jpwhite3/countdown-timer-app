{"version":3,"file":"static/js/818.e94806e9.chunk.js","mappings":"qRAmBA,MAiJA,EAjJaA,KACX,IAAKC,EAAeC,IAAYC,EAAAA,EAAAA,UAAS,IAAIC,MAC7C,MAAOC,EAAOC,IAAYH,EAAAA,EAAAA,UAAS,kBAOnC,SAASI,EAAUC,GACjB,MAAMC,EAAuB,GAAXD,EAAgB,IAClC,IAAIE,EAAU,IAAIN,KAElB,OADAH,EAAgB,IAAIG,KAAKM,EAAQC,UAAYF,GACtCR,CACT,CACA,OACEW,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAACC,IAAE,EAAAC,UACZC,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAACC,UAAU,qBAAoBH,SAAA,EACnCH,EAAAA,EAAAA,KAACO,EAAAA,GAAW,CAACD,UAAU,uBAAsBH,SAAC,qBAC9CC,EAAAA,EAAAA,MAACI,EAAAA,GAAS,CAAAL,SAAA,EACRH,EAAAA,EAAAA,KAACS,EAAAA,GAAS,CAACH,UAAU,OAAMH,SAAC,wFAG5BC,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAAAP,SAAA,EACJC,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACC,GAAI,CAAEC,KAAM,GAAIV,SAAA,EACpBH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACR,UAAU,OAAMH,UACpBH,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CACTC,GAAG,aACHC,KAAK,OACLC,MAAM,QACNC,YAAY,iBACZ7B,SA5BM8B,IACpB1B,EAAS0B,EAAMC,OAAOC,MAAM,EA4BdA,MAAO7B,EACP8B,KAAK,KACLjB,UAAU,YAGdF,EAAAA,EAAAA,MAACU,EAAAA,GAAI,CAACR,UAAU,OAAMH,SAAA,EACpBC,EAAAA,EAAAA,MAAA,SAAOE,UAAU,aAAYH,SAAA,EAC3BH,EAAAA,EAAAA,KAACwB,EAAAA,EAAK,CAACC,KAAMC,EAAAA,IAAY,4BAG3B1B,EAAAA,EAAAA,KAAC2B,IAAQ,CACPC,gBAAgB,OAChBC,aAAc,IAAIrC,KAClB8B,MAAOjC,EACPC,SAAUA,EACVwC,OAAO,EACPP,KAAK,QAEPvB,EAAAA,EAAAA,KAAA,OAAKM,UAAU,YAAWH,SAAC,yCAG/BC,EAAAA,EAAAA,MAACO,EAAAA,GAAI,CAACL,UAAU,yBAAyBM,GAAI,CAAEC,KAAM,GAAKX,GAAI,CAAEW,KAAM,GAAIV,SAAA,EACxEH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAAAX,UACHH,EAAAA,EAAAA,KAAA,OAAKM,UAAU,eAAcH,UAC3BH,EAAAA,EAAAA,KAAC+B,EAAAA,GAAO,CACNzB,UAAU,qBACViB,KAAK,KACLS,QAAUZ,IACRA,EAAMa,iBACN3C,EAASK,EAAU,GAAG,EACtBQ,SACH,mBAKLH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAAAX,UACHH,EAAAA,EAAAA,KAAA,OAAKM,UAAU,eAAcH,UAC3BH,EAAAA,EAAAA,KAAC+B,EAAAA,GAAO,CACNzB,UAAU,qBACViB,KAAK,KACLS,QAAUZ,IACRA,EAAMa,iBACN3C,EAASK,EAAU,IAAI,EACvBQ,SACH,oBAKLH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAAAX,UACHH,EAAAA,EAAAA,KAAA,OAAKM,UAAU,eAAcH,UAC3BH,EAAAA,EAAAA,KAAC+B,EAAAA,GAAO,CACNzB,UAAU,qBACViB,KAAK,KACLS,QAAUZ,IACRA,EAAMa,iBACN3C,EAASK,EAAU,IAAI,EACvBQ,SACH,oBAKLH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAAAX,UACHH,EAAAA,EAAAA,KAAA,OAAKM,UAAU,eAAcH,UAC3BH,EAAAA,EAAAA,KAAC+B,EAAAA,GAAO,CACNzB,UAAU,qBACViB,KAAK,KACLS,QAAUZ,IACRA,EAAMa,iBACN3C,EAASK,EAAU,IAAI,EACvBQ,SACH,oBAKLH,EAAAA,EAAAA,KAAA,OAAKM,UAAU,eAAcH,UAC3BH,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAAAX,UACHH,EAAAA,EAAAA,KAAA,OAAKM,UAAU,eAAcH,UAC3BH,EAAAA,EAAAA,KAAC+B,EAAAA,GAAO,CACNzB,UAAU,qBACViB,KAAK,KACLS,QAAUZ,IACRA,EAAMa,iBACN3C,EAASK,EAAU,IAAI,EACvBQ,SACH,2BASbH,EAAAA,EAAAA,KAACkC,EAAAA,GAAW,CAAA/B,UACVH,EAAAA,EAAAA,KAAA,OAAKM,UAAU,eAAcH,UAC3BH,EAAAA,EAAAA,KAAC+B,EAAAA,GAAO,CACNI,MAAM,UACNZ,KAAK,KACLS,QAAUI,GAhILC,EAACC,EAAM7C,KACtB8C,OAAOC,SAAWD,OAAOC,SAASC,KAAO,qBAAuBH,EAAO,UAAY7C,CAAK,EA+H9D4C,CAAShD,EAAcqD,cAAejD,GAAOU,SAC9D,wBAMI,C","sources":["views/Home.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  CCol,\n  CRow,\n  CCard,\n  CCardHeader,\n  CCardFooter,\n  CCardBody,\n  CCardText,\n  CButton,\n  CForm,\n  CFormInput,\n  CContainer,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilClock } from '@coreui/icons'\nimport Datetime from 'react-datetime'\nimport 'react-datetime/css/react-datetime.css'\n\nconst Home = () => {\n  let [selected_time, onChange] = useState(new Date())\n  const [title, setTitle] = useState('Time Remaining')\n  const handleChange = (event) => {\n    setTitle(event.target.value)\n  }\n  const redirect = (time, title) => {\n    window.location = window.location.href + '#/countdown?until=' + time + '&title=' + title\n  }\n  function calcBreak(breakAmt) {\n    const timeToAdd = breakAmt * 60 * 1000\n    let curTime = new Date()\n    selected_time = new Date(curTime.getTime() + timeToAdd)\n    return selected_time\n  }\n  return (\n    <CContainer sm>\n      <CCard className=\"shadow m-2 rounded\">\n        <CCardHeader className=\"fs-1 h1 text-bg-dark\">Countdown Timer</CCardHeader>\n        <CCardBody>\n          <CCardText className=\"fs-4\">\n            Choose a date and time below, then click the button to create your sharable timer.\n          </CCardText>\n          <CForm>\n            <CRow xs={{ cols: 1 }}>\n              <CCol className=\"mt-2\">\n                <CFormInput\n                  id=\"titlefield\"\n                  type=\"text\"\n                  label=\"Title\"\n                  placeholder=\"Time remaining\"\n                  onChange={handleChange}\n                  value={title}\n                  size=\"sm\"\n                  className=\"fs-5\"\n                />\n              </CCol>\n              <CCol className=\"mt-2\">\n                <label className=\"form-label\">\n                  <CIcon icon={cilClock} />\n                  &nbsp; Target Date/Time\n                </label>\n                <Datetime\n                  initialViewMode=\"time\"\n                  initialValue={new Date()}\n                  value={selected_time}\n                  onChange={onChange}\n                  input={false}\n                  size=\"sm\"\n                />\n                <div className=\"form-text\">Must be a time in the future.</div>\n              </CCol>\n            </CRow>\n            <CRow className=\"justify-content-center\" xs={{ cols: 2 }} sm={{ cols: 5 }}>\n              <CCol>\n                <div className=\"d-grid gap-2\">\n                  <CButton\n                    className=\"mt-4 btn-secondary\"\n                    size=\"sm\"\n                    onClick={(event) => {\n                      event.preventDefault()\n                      onChange(calcBreak(5))\n                    }}\n                  >\n                    5 Minutes\n                  </CButton>\n                </div>\n              </CCol>\n              <CCol>\n                <div className=\"d-grid gap-2\">\n                  <CButton\n                    className=\"mt-4 btn-secondary\"\n                    size=\"sm\"\n                    onClick={(event) => {\n                      event.preventDefault()\n                      onChange(calcBreak(10))\n                    }}\n                  >\n                    10 Minutes\n                  </CButton>\n                </div>\n              </CCol>\n              <CCol>\n                <div className=\"d-grid gap-2\">\n                  <CButton\n                    className=\"mt-4 btn-secondary\"\n                    size=\"sm\"\n                    onClick={(event) => {\n                      event.preventDefault()\n                      onChange(calcBreak(15))\n                    }}\n                  >\n                    15 Minutes\n                  </CButton>\n                </div>\n              </CCol>\n              <CCol>\n                <div className=\"d-grid gap-2\">\n                  <CButton\n                    className=\"mt-4 btn-secondary\"\n                    size=\"sm\"\n                    onClick={(event) => {\n                      event.preventDefault()\n                      onChange(calcBreak(30))\n                    }}\n                  >\n                    30 Minutes\n                  </CButton>\n                </div>\n              </CCol>\n              <div className=\"d-grid gap-2\">\n                <CCol>\n                  <div className=\"d-grid gap-2\">\n                    <CButton\n                      className=\"mt-4 btn-secondary\"\n                      size=\"sm\"\n                      onClick={(event) => {\n                        event.preventDefault()\n                        onChange(calcBreak(60))\n                      }}\n                    >\n                      1 Hour\n                    </CButton>\n                  </div>\n                </CCol>\n              </div>\n            </CRow>\n          </CForm>\n        </CCardBody>\n        <CCardFooter>\n          <div className=\"d-grid gap-2\">\n            <CButton\n              color=\"primary\"\n              size=\"lg\"\n              onClick={(e) => redirect(selected_time.toISOString(), title)}\n            >\n              Start Timer\n            </CButton>\n          </div>\n        </CCardFooter>\n      </CCard>\n    </CContainer>\n  )\n}\n\nexport default Home\n"],"names":["Home","selected_time","onChange","useState","Date","title","setTitle","calcBreak","breakAmt","timeToAdd","curTime","getTime","_jsx","CContainer","sm","children","_jsxs","CCard","className","CCardHeader","CCardBody","CCardText","CForm","CRow","xs","cols","CCol","CFormInput","id","type","label","placeholder","event","target","value","size","CIcon","icon","cilClock","Datetime","initialViewMode","initialValue","input","CButton","onClick","preventDefault","CCardFooter","color","e","redirect","time","window","location","href","toISOString"],"sourceRoot":""}